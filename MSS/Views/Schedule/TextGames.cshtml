@model MSS.Models.ScheduleModel
<div id="WeekTextGames">
    <table class="tableborder rowStyle DOPrint">
        <thead>
            <tr class="DOPrint">
                <th></th>
                <th>Game
                </th>
                <th>Network
                </th>
                @if (!Model.IsBowlWeek && !Model.IsBasketballPostseason)
                {
                    <th>PPV
                    </th>
                }
                <th>Time
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.TelevisedGamesList.Where(item => !item.Network.IsEmpty()))
            {
                <tr class="gamerow DONTPrint rowStyle">
                    <td class="tablecell">
                        <input class="checkBoxRow" type="checkbox" />
                    </td>
                    <td class="tablecell gamecell">
                        @if (!String.IsNullOrEmpty(item.GameTitle))
                        {
                            <label><b><i>@item.GameTitle</i></b></label><br />
                        }
                        @if (!String.IsNullOrEmpty(item.Location))
                        {
                            if (item.VisitingTeam.Count() == 1 && String.IsNullOrEmpty(item.VisitingTeam[0]))
                            {

                            }

                            else if (item.VisitingTeam.Count() == 1 && !String.IsNullOrEmpty(item.VisitingTeam[0]))
                            {
                                <label>@item.VisitingTeam[0] vs. @item.HomeTeam[0]</label><br />
                            }
                            else
                            {
                                string game = string.Format(@"{0} vs. {1}", item.VisitingTeam[0], item.HomeTeam[0]);
                                for (int i = 1; i < item.VisitingTeam.ToArray().Length; i++)
                                {
                                    game = game + string.Format(@"<br>OR {0} vs. {1}", item.VisitingTeam[i], item.HomeTeam[i]);
                                }
                                <label>
                                    @Html.Raw(game)
                                </label>
                            }
                            <label>(at @item.Location)</label><br />
                        }
                        else
                        {
                            if (item.VisitingTeam.Count() == 1 && String.IsNullOrEmpty(item.VisitingTeam[0]))
                            {

                            }

                            else if (item.VisitingTeam.Count() == 1 && !String.IsNullOrEmpty(item.VisitingTeam[0]))
                            {
                                <label>@item.VisitingTeam[0] at @item.HomeTeam[0]</label>
                            }
                            else
                            {
                                string game = string.Format(@"{0} at {1}", item.VisitingTeam[0], item.HomeTeam[0]);
                                for (int i = 1; i < item.VisitingTeam.ToArray().Length; i++)
                                {
                                    game = game + string.Format(@"<br>OR {0} at {1}", item.VisitingTeam[i], item.HomeTeam[i]);
                                }
                                <label>
                                    @Html.Raw(game)
                                </label>

                            }
                        }
                    </td>
                    <td class="tablecell networkcell">
                        @Html.Raw(item.Network)
                    </td>
                    @if (!Model.IsBowlWeek && !Model.IsBasketballPostseason)
                    {
                        <td class="tablecell ppvcell">
                            @if (item.PPV == "X")
                            {
                                @Html.Label("PPV")
                            }
                        </td>
                    }
                    @if (item.TimeString == "TBA")
                    {
                        <td class="tablecell timecell">
                            <span></span>@Html.DisplayFor(modelItem => item.TimeString)
                        </td>
                    }
                    else
                    {
                        <td class="tablecell timecell">
                            @Html.DisplayFor(modelItem => item.TimeString)
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>
