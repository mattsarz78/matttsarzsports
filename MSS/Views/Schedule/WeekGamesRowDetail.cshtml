@model MSS.Models.TelevisedGame
<td class="game">
    @if (!String.IsNullOrEmpty(Model.GameTitle))
    {
        <label><b><i>@Model.GameTitle</i></b></label><br />
    }
    @if (!String.IsNullOrEmpty(Model.Location))
    {
        if (Model.VisitingTeam.Count() == 1 && String.IsNullOrEmpty(Model.VisitingTeam[0]))
        {

        }
        else if (Model.VisitingTeam.Count() == 1 && !String.IsNullOrEmpty(Model.VisitingTeam[0]))
        {
            <label>@Model.VisitingTeam[0] vs. @Model.HomeTeam[0]</label><br />
        }
        else
        {
            string game = string.Format(@"{0} vs. {1}", Model.VisitingTeam[0], Model.HomeTeam[0]);
            for (int i = 1; i < Model.VisitingTeam.ToArray().Length; i++)
            {
                game = game + string.Format(@"<br>OR {0} vs. {1}", Model.VisitingTeam[i], Model.HomeTeam[i]);
            }
            <label>
                @Html.Raw(game)
            </label>
        }
    }
    else
    {
        if (Model.VisitingTeam.Count() == 1 && String.IsNullOrEmpty(Model.VisitingTeam[0]))
        {

        }

        else if (Model.VisitingTeam.Count() == 1 && !String.IsNullOrEmpty(Model.VisitingTeam[0]))
        {
            <label>@Model.VisitingTeam[0] at @Model.HomeTeam[0]</label>
        }
        else
        {
            string game = string.Format(@"{0} at {1}", Model.VisitingTeam[0], Model.HomeTeam[0]);
            for (int i = 1; i < Model.VisitingTeam.ToArray().Length; i++)
            {
                game = game + string.Format(@"<br>OR {0} at {1}", Model.VisitingTeam[i], Model.HomeTeam[i]);
            }
            <label>
                @Html.Raw(game)
            </label>

        }
    }
</td>
<td class="network">
    @Html.Raw(Model.Network)
</td>
<td class="coverage">
    @Html.Raw(Model.CoverageNotes)
</td>
<td class="ppv">
    @Html.Raw(Model.PPV)
</td>
<td class="time">
    @Html.Raw(Model.TimeString)
</td>